{"version":3,"sources":["admin.js"],"names":["win","View","Request","Backbone","extend","className","events","click","initialize","this","render","me","$el","html","precodeandbeauty","messages","server_error","appendTo","_","delay","remove","Model","url","ajaxurl","defaults","_wpnonce","on","serverError","prototype","apply","arguments","parse","response","action","get","success","trigger","data","ServerError","window"],"mappings":";;;;;;CACA,SAAUA,GACN,YAEA,IAAIC,GAAMC,CAMVD,GAAOE,SAASF,KAAKG,QACjBC,UAAW,iBACXC,QACIC,MAAS,UAGbC,WAAY,WACRC,KAAKC,UAGTA,OAAQ,WACJ,GAAIC,EAEJA,GAAKF,KACLA,KAAKG,IAAIC,KAAMb,EAAIc,iBAAiBC,SAASC,cAAeC,SAAS,QAErEC,EAAEC,MAAM,WACJR,EAAGS,UACJ,QAiBXlB,EAAUC,SAASkB,MAAMjB,QACrBkB,IAAKtB,EAAIc,iBAAiBS,QAAU,wCACpCC,UACIC,SAAUzB,EAAIc,iBAAiBW,UAGnCjB,WAAY,WACRC,KAAKiB,GAAG,QAASjB,KAAKkB,YAAalB,MAEnCN,SAASkB,MAAMO,UAAUpB,WAAWqB,MAAMpB,KAAMqB,YAGpDC,MAAO,SAAWC,GACd,GAAIC,GAASxB,KAAKyB,IAAI,SAEjBF,GAASG,QACV1B,KAAK2B,QAAQ,yBAA2BH,EAAQD,EAASK,MAEzD5B,KAAK2B,QAAQ,uBAAyBH,EAAQD,EAASK,OAI/DV,YAAa,WACTlB,KAAKO,aAAe,GAAIf,MAKhCD,EAAIc,iBAAiBZ,QAAUA,EAC/BF,EAAIc,iBAAiBwB,YAAcrC,GACpCsC","file":"../admin.min.js","sourcesContent":["/* global Backbone */\r\n(function(win){\r\n    'use strict';\r\n\r\n    var View, Request;\r\n\r\n    /**\r\n    A simple notification message view that will be use when\r\n    a request encounters a server error.\r\n    **/\r\n    View = Backbone.View.extend({\r\n        className: 'notify-message',\r\n        events: {\r\n            'click': 'remove'\r\n        },\r\n\r\n        initialize: function() {\r\n            this.render();\r\n        },\r\n\r\n        render: function() {\r\n            var me;\r\n\r\n            me = this;\r\n            this.$el.html( win.precodeandbeauty.messages.server_error ).appendTo('body');\r\n\r\n            _.delay(function() {\r\n                me.remove();\r\n            }, 5000);\r\n        }\r\n    });\r\n\r\n    /**\r\n    Send or get server request/response.\r\n    Required param:\r\n        `action`    The request action or method name inside `CodeAndBeauty_Ajax` class that will be called\r\n                    and executed.\r\n    Useful hooks:\r\n        `precodeandbeauty:success_{ACTION_NAME}`   Fired whenever the request returns successfully.\r\n            @param:\r\n                (object) data       The response data in json format, if there's any.\r\n        `precodeandbeauty:error_{ACTION_NAME}`     Fired when the request is unsuccessful.\r\n            @param:\r\n                (object) data       Optional. The error data/message.\r\n    **/\r\n    Request = Backbone.Model.extend({\r\n        url: win.precodeandbeauty.ajaxurl + '?action=precodeandbeauty_ajax_request',\r\n        defaults: {\r\n            _wpnonce: win.precodeandbeauty._wpnonce\r\n        },\r\n\r\n        initialize: function () {\r\n            this.on('error', this.serverError, this);\r\n\r\n            Backbone.Model.prototype.initialize.apply(this, arguments);\r\n        },\r\n\r\n        parse: function ( response ) {\r\n            var action = this.get('action');\r\n\r\n            if ( response.success ) {\r\n                this.trigger('codeandbeauty:success_' + action, response.data);\r\n            } else {\r\n                this.trigger('codeandbeauty:error_' + action, response.data);\r\n            }\r\n        },\r\n\r\n        serverError: function () {\r\n            this.server_error = new View();\r\n        }\r\n    });\r\n\r\n    // Make the request and view instance accessible anywhere\r\n    win.precodeandbeauty.Request = Request;\r\n    win.precodeandbeauty.ServerError = View;\r\n})(window);"]}